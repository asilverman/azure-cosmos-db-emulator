name: 'Azure Cosmos DB Emulator'
description: 'Starts up the Azure Cosmos DB Emulator for use by your integration tests'
runs:
  using: "composite"
  steps:
    - run: echo adding Microsoft.Azure.CosmosDB.Emulator PSModule to execution environment
      shell: pwsh
    - run: echo "PSModulePath=$env:PSModulePath;$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: pwsh
    - run: echo start Microsoft.Azure.CosmosDB.Emulator
      shell: pwsh
    - run: Start-CosmosDbEmulator -NoUI -NoTelemetry -PartitionCount 2 -Consistency Strong -NoWait
      shell: pwsh
    - run: echo wait for Microsoft.Azure.CosmosDB.Emulator to enter a 'running' state
      shell: pwsh
    - run: |
        $timeout = New-TimeSpan -Minutes 5
          $endTime = (Get-Date).Add($timeout)
          do {
            $status = Get-CosmosDbEmulatorStatus
            Write-Host "Cosmos DB Emulator Status: $status" -ForegroundColor yellow
          }
          until ($result -eq "Running" -or ((Get-Date) -gt $endTime))
           Write-Host  "Cosmos DB Emulator is running" -ForegroundColor green
